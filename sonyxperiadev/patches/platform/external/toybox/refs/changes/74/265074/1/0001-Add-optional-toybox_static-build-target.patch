From f0567ae5e157074148f8f30306796c29dbc0d27d Mon Sep 17 00:00:00 2001
From: Adam Farden <adam@farden.cz>
Date: Wed, 27 Jul 2016 16:46:05 +0200
Subject: [PATCH] Add optional toybox_static build target

This is useful for debugging outside of Android

Change-Id: I9d49da7b958b303c8aa9d4579d7625ebdea3030e
Signed-off-by: Adam Farden <adam@farden.cz>
---
 Android.mk | 70 +++++++++++++++++++++++++++++++++++++++++++++++---------------
 1 file changed, 53 insertions(+), 17 deletions(-)

diff --git a/Android.mk b/Android.mk
index 6e8c26f..087f3ab 100644
--- a/Android.mk
+++ b/Android.mk
@@ -16,6 +16,24 @@
 
 LOCAL_PATH := $(call my-dir)
 
+common_cflags += \
+    -std=c99 \
+    -Os \
+    -Wno-char-subscripts \
+    -Wno-sign-compare \
+    -Wno-string-plus-int \
+    -Wno-uninitialized \
+    -Wno-unused-parameter \
+    -funsigned-char \
+    -ffunction-sections -fdata-sections \
+    -fno-asynchronous-unwind-tables \
+
+toybox_upstream_version := $(shell awk 'match($$0, /TOYBOX_VERSION.*"(.*)"/, ary) {print ary[1]}' $(LOCAL_PATH)/main.c)
+toybox_sha := $(shell git -C $(LOCAL_PATH) rev-parse --short=12 HEAD 2>/dev/null)
+
+toybox_version := $(toybox_upstream_version)-$(toybox_sha)-android
+common_cflags += -DTOYBOX_VERSION='"$(toybox_version)"'
+
 #
 # To update:
 #
@@ -201,23 +219,7 @@ LOCAL_SRC_FILES := \
     toys/posix/wc.c \
     toys/posix/xargs.c \
 
-LOCAL_CFLAGS += \
-    -std=c99 \
-    -Os \
-    -Wno-char-subscripts \
-    -Wno-sign-compare \
-    -Wno-string-plus-int \
-    -Wno-uninitialized \
-    -Wno-unused-parameter \
-    -funsigned-char \
-    -ffunction-sections -fdata-sections \
-    -fno-asynchronous-unwind-tables \
-
-toybox_upstream_version := $(shell awk 'match($$0, /TOYBOX_VERSION.*"(.*)"/, ary) {print ary[1]}' $(LOCAL_PATH)/main.c)
-toybox_sha := $(shell git -C $(LOCAL_PATH) rev-parse --short=12 HEAD 2>/dev/null)
-
-toybox_version := $(toybox_upstream_version)-$(toybox_sha)-android
-LOCAL_CFLAGS += -DTOYBOX_VERSION='"$(toybox_version)"'
+LOCAL_CFLAGS += $(common_cflags)
 
 LOCAL_CLANG := true
 
@@ -226,7 +228,16 @@ LOCAL_SHARED_LIBRARIES := libcutils libselinux
 # This doesn't actually prevent us from dragging in libc++ at runtime
 # because libnetd_client.so is C++.
 LOCAL_CXX_STL := none
+LOCAL_MODULE := libtoybox
+include $(BUILD_STATIC_LIBRARY)
 
+include $(CLEAR_VARS)
+LOCAL_SRC_FILES := main.c
+LOCAL_CFLAGS := $(common_cflags)
+LOCAL_CLANG := true
+LOCAL_STATIC_LIBRARIES := libtoybox
+LOCAL_SHARED_LIBRARIES := libcutils libselinux libcrypto
+LOCAL_CXX_STL := none
 LOCAL_MODULE := toybox
 
 # dupes: dd
@@ -371,3 +382,28 @@ ALL_TOOLS := \
 LOCAL_POST_INSTALL_CMD := $(hide) $(foreach t,$(ALL_TOOLS),ln -sf toybox $(TARGET_OUT)/bin/$(t);)
 
 include $(BUILD_EXECUTABLE)
+
+include $(CLEAR_VARS)
+LOCAL_SRC_FILES := main.c
+LOCAL_CFLAGS := $(common_cflags)
+LOCAL_CLANG := true
+
+LOCAL_STATIC_LIBRARIES := \
+    libc \
+    libtoybox \
+    libcutils \
+    libselinux \
+    liblog \
+    libcrypto_static
+
+LOCAL_CXX_STL := none
+LOCAL_MODULE := toybox_static
+
+LOCAL_MODULE_CLASS := UTILITY_EXECUTABLES
+LOCAL_MODULE_PATH := $(PRODUCT_OUT)/utilities
+LOCAL_MODULE_STEM := toybox
+LOCAL_MODULE_TAGS := optional
+LOCAL_UNSTRIPPED_PATH := $(PRODUCT_OUT)/symbols/utilities
+LOCAL_FORCE_STATIC_EXECUTABLE := true
+LOCAL_PACK_MODULE_RELOCATIONS := false
+include $(BUILD_EXECUTABLE)
-- 
1.9.1

