From 2e180d2e1d26b342406571cf055a74f9340559f0 Mon Sep 17 00:00:00 2001
From: Dante Russo <drusso@codeaurora.org>
Date: Wed, 7 Feb 2018 12:09:33 +0530
Subject: [PATCH] remove unused variables for compilation

remove unsed variables and fix few compiler issues

Test: mmma sdm845 -j4
Test: BOARD_VNDK_VERSION=current mmma sdm845 -j4

CRs-fixed: 2175735
Change-Id: I635a7503326928f43070aa2224bc3c3d6e1ff929
---
 .../core/data-items/DataItemsFactoryProxy.cpp        |  2 +-
 sdm845/android/location_api/BatchingAPIClient.h      |  1 -
 sdm845/android/location_api/GnssAPIClient.cpp        |  2 +-
 sdm845/android/location_api/MeasurementAPIClient.cpp |  2 +-
 sdm845/core/LocApiBase.cpp                           |  2 +-
 sdm845/core/loc_core_log.cpp                         | 20 --------------------
 sdm845/gnss/GnssAdapter.cpp                          |  2 +-
 sdm845/utils/loc_cfg.cpp                             |  3 ---
 sdm845/utils/loc_nmea.cpp                            |  5 -----
 sdm845/utils/loc_target.cpp                          |  1 -
 10 files changed, 5 insertions(+), 35 deletions(-)

diff --git a/msm8909w_3100/core/data-items/DataItemsFactoryProxy.cpp b/msm8909w_3100/core/data-items/DataItemsFactoryProxy.cpp
index 130eecf..e07b3cd 100644
--- a/msm8909w_3100/core/data-items/DataItemsFactoryProxy.cpp
+++ b/msm8909w_3100/core/data-items/DataItemsFactoryProxy.cpp
@@ -68,7 +68,7 @@ IDataItemCore* DataItemsFactoryProxy::createNewDataItem(DataItemId id)
             getConcreteDIFunc = (get_concrete_data_item_fn * )
                                     dlsym(dataItemLibHandle, DATA_ITEMS_GET_CONCRETE_DI);
             if (NULL != getConcreteDIFunc) {
-                LOC_LOGD("Loaded function %s : %x",DATA_ITEMS_GET_CONCRETE_DI,getConcreteDIFunc);
+                LOC_LOGD("Loaded function %s : %p",DATA_ITEMS_GET_CONCRETE_DI,getConcreteDIFunc);
                 mydi = (*getConcreteDIFunc)(id);
             }
             else {
diff --git a/sdm845/android/location_api/BatchingAPIClient.h b/sdm845/android/location_api/BatchingAPIClient.h
index a34c211..86bff1a 100644
--- a/sdm845/android/location_api/BatchingAPIClient.h
+++ b/sdm845/android/location_api/BatchingAPIClient.h
@@ -63,7 +63,6 @@ public:
 private:
     sp<IGnssBatchingCallback> mGnssBatchingCbIface;
     uint32_t mDefaultId;
-    int mBatchSize;
     LocationCapabilitiesMask mLocationCapabilitiesMask;
 };
 
diff --git a/sdm845/android/location_api/GnssAPIClient.cpp b/sdm845/android/location_api/GnssAPIClient.cpp
index 7acfbd7..45e4981 100644
--- a/sdm845/android/location_api/GnssAPIClient.cpp
+++ b/sdm845/android/location_api/GnssAPIClient.cpp
@@ -423,7 +423,7 @@ static void convertGnssSvStatus(GnssSvNotification& in, IGnssCallback::GnssSvSta
     memset(&out, 0, sizeof(IGnssCallback::GnssSvStatus));
     out.numSvs = in.count;
     if (out.numSvs > static_cast<uint32_t>(GnssMax::SVS_COUNT)) {
-        LOC_LOGW("%s]: Too many satellites %zd. Clamps to %d.",
+        LOC_LOGW("%s]: Too many satellites %u. Clamps to %d.",
                 __FUNCTION__,  out.numSvs, GnssMax::SVS_COUNT);
         out.numSvs = static_cast<uint32_t>(GnssMax::SVS_COUNT);
     }
diff --git a/sdm845/android/location_api/MeasurementAPIClient.cpp b/sdm845/android/location_api/MeasurementAPIClient.cpp
index 468c77a..7672f45 100644
--- a/sdm845/android/location_api/MeasurementAPIClient.cpp
+++ b/sdm845/android/location_api/MeasurementAPIClient.cpp
@@ -269,7 +269,7 @@ static void convertGnssData(GnssMeasurementsNotification& in,
 {
     out.measurementCount = in.count;
     if (out.measurementCount > static_cast<uint32_t>(GnssMax::SVS_COUNT)) {
-        LOC_LOGW("%s]: Too many measurement %zd. Clamps to %d.",
+        LOC_LOGW("%s]: Too many measurement %u. Clamps to %d.",
                 __FUNCTION__,  out.measurementCount, GnssMax::SVS_COUNT);
         out.measurementCount = static_cast<uint32_t>(GnssMax::SVS_COUNT);
     }
diff --git a/sdm845/core/LocApiBase.cpp b/sdm845/core/LocApiBase.cpp
index 6cc00b1..7442dc8 100644
--- a/sdm845/core/LocApiBase.cpp
+++ b/sdm845/core/LocApiBase.cpp
@@ -118,7 +118,7 @@ struct LocOpenMsg : public LocMsg {
         mLocApi->open(mMask);
     }
     inline void locallog() const {
-        LOC_LOGV("%s:%d]: LocOpen Mask: %x\n",
+        LOC_LOGV("%s:%d]: LocOpen Mask: %" PRIu64 "\n",
                  __func__, __LINE__, mMask);
     }
     inline virtual void log() const {
diff --git a/sdm845/core/loc_core_log.cpp b/sdm845/core/loc_core_log.cpp
index 5a627dd..856398f 100644
--- a/sdm845/core/loc_core_log.cpp
+++ b/sdm845/core/loc_core_log.cpp
@@ -100,26 +100,6 @@ const char* loc_get_position_recurrence_name(LocGpsPositionRecurrence recur)
     return loc_get_name_from_val(loc_eng_position_recurrences, loc_eng_position_recurrence_num, (long) recur);
 }
 
-
-
-static const loc_name_val_s_type loc_eng_aiding_data_bits[] =
-{
-    NAME_VAL( LOC_GPS_DELETE_EPHEMERIS ),
-    NAME_VAL( LOC_GPS_DELETE_ALMANAC ),
-    NAME_VAL( LOC_GPS_DELETE_POSITION ),
-    NAME_VAL( LOC_GPS_DELETE_TIME ),
-    NAME_VAL( LOC_GPS_DELETE_IONO ),
-    NAME_VAL( LOC_GPS_DELETE_UTC ),
-    NAME_VAL( LOC_GPS_DELETE_HEALTH ),
-    NAME_VAL( LOC_GPS_DELETE_SVDIR ),
-    NAME_VAL( LOC_GPS_DELETE_SVSTEER ),
-    NAME_VAL( LOC_GPS_DELETE_SADATA ),
-    NAME_VAL( LOC_GPS_DELETE_RTI ),
-    NAME_VAL( LOC_GPS_DELETE_CELLDB_INFO ),
-    NAME_VAL( LOC_GPS_DELETE_ALL)
-};
-static const int loc_eng_aiding_data_bit_num = sizeof(loc_eng_aiding_data_bits) / sizeof(loc_name_val_s_type);
-
 const char* loc_get_aiding_data_mask_names(LocGpsAidingData /*data*/)
 {
     return NULL;
diff --git a/sdm845/gnss/GnssAdapter.cpp b/sdm845/gnss/GnssAdapter.cpp
index 55ebaf7..cfa42da 100644
--- a/sdm845/gnss/GnssAdapter.cpp
+++ b/sdm845/gnss/GnssAdapter.cpp
@@ -1027,7 +1027,7 @@ GnssAdapter::updateClientsEventMask()
         mask |= LOC_API_ADAPTER_BIT_GNSS_MEASUREMENT;
         mask |= LOC_API_ADAPTER_BIT_GNSS_SV_POLYNOMIAL_REPORT;
 
-        LOC_LOGD("%s]: Auto usecase, Enable MEAS/POLY - mask 0x%x", __func__, mask);
+        LOC_LOGD("%s]: Auto usecase, Enable MEAS/POLY - mask 0x%" PRIu64 "", __func__, mask);
     }
 
     updateEvtMask(mask, LOC_REGISTRATION_MASK_SET);
diff --git a/sdm845/utils/loc_cfg.cpp b/sdm845/utils/loc_cfg.cpp
index d2364f6..8b495b9 100644
--- a/sdm845/utils/loc_cfg.cpp
+++ b/sdm845/utils/loc_cfg.cpp
@@ -381,9 +381,6 @@ void loc_read_conf(const char* conf_file_name, const loc_param_s_type* config_ta
                    uint32_t table_length)
 {
     FILE *conf_fp = NULL;
-    char *lasts;
-    loc_param_v_type config_value;
-    uint32_t i;
 
     if((conf_fp = fopen(conf_file_name, "r")) != NULL)
     {
diff --git a/sdm845/utils/loc_nmea.cpp b/sdm845/utils/loc_nmea.cpp
index eb193cc..c38289a 100644
--- a/sdm845/utils/loc_nmea.cpp
+++ b/sdm845/utils/loc_nmea.cpp
@@ -982,12 +982,7 @@ void loc_nmea_generate_sv(const GnssSvNotification &svNotify,
     ENTRY_LOG();
 
     char sentence[NMEA_SENTENCE_MAX_LENGTH] = {0};
-    char* pMarker = sentence;
-    int lengthRemaining = sizeof(sentence);
-    int length = 0;
     int svCount = svNotify.count;
-    int sentenceCount = 0;
-    int sentenceNumber = 1;
     int svNumber = 1;
 
     //Count GPS SVs for saparating GPS from GLONASS and throw others
diff --git a/sdm845/utils/loc_target.cpp b/sdm845/utils/loc_target.cpp
index 7e475eb..112ceed 100644
--- a/sdm845/utils/loc_target.cpp
+++ b/sdm845/utils/loc_target.cpp
@@ -288,7 +288,6 @@ detected:
 */
 int loc_identify_lean_target()
 {
-    int ret = 0;
     char lean_target[PROPERTY_VALUE_MAX];
     property_get("ro.lean", lean_target, "");
     LOC_LOGD("%s:%d]: lean target: %s\n", __func__, __LINE__, lean_target);
-- 
2.13.0

